#!/bin/bash
# create a new Module

#
# create a pom file
#
pom() {
  local l_artifactid="$1"
  local l_version="$2"
cat << EOF
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" >
  <modelVersion>4.0.0</modelVersion>
  
  <name>SimpleGraph $l_artifactid</name>
  <description>$l_artifactid submodule of com.bitplan.simplegraph</description>
  
  <parent>
    <groupId>com.bitplan.simplegraph</groupId>
    <artifactId>com.bitplan.simplegraph</artifactId>
    <version>$l_version</version>
  </parent>
  <artifactId>$l_artifactid</artifactId>
  <packaging>jar</packaging>
  <dependencies>
    <dependency>
      <groupId>\${project.groupId}</groupId>
      <artifactId>com.bitplan.simplegraph-core</artifactId>
      <version>\${project.version}</version>
    </dependency>
  </dependencies>
</project>
EOF
}

eclipse_project() {
local l_module="$1"
cat << EOF
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>$l_module</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
	</natures>
</projectDescription>
EOF
}

eclipse_classpath() {
local l_module="$1"
cat << EOF
<?xml version="1.0" encoding="UTF-8"?>
<classpath>
	<classpathentry kind="src" output="target/classes" path="src/main/java">
		<attributes>
			<attribute name="optional" value="true"/>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
		<attributes>
			<attribute name="optional" value="true"/>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8">
		<attributes>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">
		<attributes>
			<attribute name="maven.pomderived" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry kind="output" path="target/classes"/>
</classpath>
EOF
}

#
# loop over all modules
#
for module in bundle core excel filesystem html json mail map mediawiki pdf powerpoint sql smw triplestore wikidata word     
do 
  moduleName=simplegraph-$module
  package=com.bitplan.$module
  artifactId=com.bitplan.simplegraph.$module
  srcDir=src/main/java/com/bitplan
  # create the src/main and src/test java subdirectories if they do not exist yet
  for area in main test
  do
    moduleSrcDir=$moduleName/src/$area/java/com/bitplan/simplegraph/$module
    if [ ! -d $moduleSrcDir ]
    then
      mkdir -p $moduleSrcDir
    fi
  done
  if [ ! -f $moduleName/.project ]
  then
    eclipse_project $moduleName > $moduleName/.project
  fi
  if [ ! -f $moduleName/.classpath ]
  then
    eclipse_classpath > $moduleName/.classpath
  fi
  if [ ! -f $moduleName/pom.xml ]
  then
    pom $artifactId 0.0.2 > $moduleName/pom.xml
  fi
done
